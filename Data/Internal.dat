a:16:{s:6:"cmdadd";C:7:"Command":413:{a:7:{i:0;b:1;i:1;s:6:"cmdadd";i:2;s:233:"if (count ($aParams) < 2) echo '4Usage: !cmdadd name code'; else { ModuleManager :: getInstance () -> offsetGet ('Commands') -> addCommand (array_shift ($aParams), implode (' ', $aParams)); echo '3The command has been added..'; }";i:3;s:4:"9999";i:4;a:0:{}i:5;a:0:{}i:6;a:3:{s:8:"Executed";i:18;s:9:"TotalTime";d:0.0073959827423095703125;s:8:"LastTime";i:1237327598;}}}s:9:"cmdremove";C:7:"Command":448:{a:7:{i:0;b:1;i:1;s:9:"cmdremove";i:2;s:276:"if (count ($aParams) != 1) echo '4Usage: !cmdremove command'; else { if (!ModuleManager :: getInstance () -> offsetGet ('Commands') -> deleteCommand ($aParams [0])) echo '4Error: The command has not been found'; else echo '3The command has been deleted successfully.'; }";i:3;s:4:"9999";i:4;a:0:{}i:5;a:0:{}i:6;a:3:{s:8:"Executed";i:1;s:9:"TotalTime";d:0.000244140625;s:8:"LastTime";i:1237326111;}}}s:9:"cmdrename";C:7:"Command":440:{a:7:{i:0;b:1;i:1;s:9:"cmdrename";i:2;s:290:"if (count ($aParams) != 2) echo '4Usage: !cmdrename old new'; else { if (!ModuleManager :: getInstance () -> offsetGet ('Commands') -> renameCommand ($aParams [0], $aParams [1])) echo '4Error: The command has not been found'; else echo '3The command has been renamed successfully.'; }";i:3;s:4:"9999";i:4;a:0:{}i:5;a:0:{}i:6;a:3:{s:8:"Executed";i:0;s:9:"TotalTime";d:0;s:8:"LastTime";i:0;}}}s:10:"cmdchannel";C:7:"Command":547:{a:7:{i:0;b:1;i:1;s:10:"cmdchannel";i:2;s:363:"if (count ($aParams) < 2) echo '4Usage: !cmdchannel command [- / channel1 channel215..]'; else { $c = ModuleManager :: getInstance () -> offsetGet ('Commands') -> offsetGet ($aParams [0]); if ($c) { $c -> setChannels (array_slice ($aParams, 1)); echo '3The channels have been updated successfully.'; } else echo '4Error: The command has not been found'; }";i:3;s:4:"9999";i:4;a:0:{}i:5;a:0:{}i:6;a:3:{s:8:"Executed";i:3;s:9:"TotalTime";d:0.0001161098480224609375;s:8:"LastTime";i:1237326100;}}}s:10:"cmdnetwork";C:7:"Command":515:{a:7:{i:0;b:1;i:1;s:10:"cmdnetwork";i:2;s:363:"if (count ($aParams) < 2) echo '4Usage: !cmdnetwork command [- / network1 network215..]'; else { $c = ModuleManager :: getInstance () -> offsetGet ('Commands') -> offsetGet ($aParams [0]); if ($c) { $c -> setNetworks (array_slice ($aParams, 1)); echo '3The networks have been updated successfully.'; } else echo '4Error: The command has not been found'; }";i:3;s:4:"9999";i:4;a:0:{}i:5;a:0:{}i:6;a:3:{s:8:"Executed";i:0;s:9:"TotalTime";d:0;s:8:"LastTime";i:0;}}}s:7:"cmdcode";C:7:"Command":429:{a:7:{i:0;b:1;i:1;s:7:"cmdcode";i:2;s:251:"if (count ($aParams) != 1) echo '4Usage: !cmdcode command'; else { $c = ModuleManager :: getInstance () -> offsetGet ('Commands') -> offsetGet ($aParams [0]); if ($c) { echo $c -> getCode (); } else echo '4Error: The command has not been found'; }";i:3;s:4:"9999";i:4;a:0:{}i:5;a:0:{}i:6;a:3:{s:8:"Executed";i:1;s:9:"TotalTime";d:3.60012054443359375E-5;s:8:"LastTime";i:1237326206;}}}s:7:"cmdlist";C:7:"Command":462:{a:7:{i:0;b:1;i:1;s:7:"cmdlist";i:2;s:283:"$aCmd = array (); foreach (ModuleManager :: getInstance () -> offsetGet ('Commands') -> getIterator () as $sName => $pCommand) $aCmd [] = $sName; echo wordwrap ('4Commands (' . count (ModuleManager :: getInstance () -> offsetGet ('Commands')) . '): ' . implode (', ', $aCmd), 400);";i:3;s:4:"9999";i:4;a:0:{}i:5;a:0:{}i:6;a:3:{s:8:"Executed";i:5;s:9:"TotalTime";d:0.000475406646728515625;s:8:"LastTime";i:1237327567;}}}s:10:"moduleload";C:7:"Command":413:{a:7:{i:0;b:1;i:1;s:10:"moduleload";i:2;s:230:"if (count ($aParams) != 1) echo '4Usage: !moduleload name'; else { if (ModuleManager :: getInstance () -> loadModule ($aParams [0])) echo '3The module has been loaded.'; else echo '4Error: The module could not be loaded.'; }";i:3;s:4:"9999";i:4;a:0:{}i:5;a:0:{}i:6;a:3:{s:8:"Executed";i:1;s:9:"TotalTime";d:0.000359058380126953125;s:8:"LastTime";i:1237326558;}}}s:12:"moduleunload";C:7:"Command":392:{a:7:{i:0;b:1;i:1;s:12:"moduleunload";i:2;s:238:"if (count ($aParams) != 1) echo '4Usage: !moduleunload name'; else { if (ModuleManager :: getInstance () -> unloadModule ($aParams [0])) echo '3The module has been unloaded.'; else echo '4Error: The module could not be unloaded.'; }";i:3;s:4:"9999";i:4;a:0:{}i:5;a:0:{}i:6;a:3:{s:8:"Executed";i:0;s:9:"TotalTime";d:0;s:8:"LastTime";i:0;}}}s:12:"modulereload";C:7:"Command":392:{a:7:{i:0;b:1;i:1;s:12:"modulereload";i:2;s:238:"if (count ($aParams) != 1) echo '4Usage: !modulereload name'; else { if (ModuleManager :: getInstance () -> reloadModule ($aParams [0])) echo '3The module has been reloaded.'; else echo '4Error: The module could not be reloaded.'; }";i:3;s:4:"9999";i:4;a:0:{}i:5;a:0:{}i:6;a:3:{s:8:"Executed";i:0;s:9:"TotalTime";d:0;s:8:"LastTime";i:0;}}}s:10:"modulelist";C:7:"Command":369:{a:7:{i:0;b:1;i:1;s:10:"modulelist";i:2;s:187:"$c = ModuleManager :: getInstance (); $aModules = array (); foreach ($c as $sName => $pModule) $aModules [] = $sName; echo '4Modules (' . count ($c) . '): ' . implode (', ', $aModules);";i:3;s:4:"9999";i:4;a:0:{}i:5;a:0:{}i:6;a:3:{s:8:"Executed";i:1;s:9:"TotalTime";d:0.00016689300537109375;s:8:"LastTime";i:1237326886;}}}s:7:"botlist";C:7:"Command":360:{a:7:{i:0;b:1;i:1;s:7:"botlist";i:2;s:185:"$c = BotManager :: getInstance () -> getBotList (); $aBots = array (); foreach ($c as $sName => $Bot) $aBots [] = $sName; echo '4Bots (' . count ($c) . '): ' . implode (', ', $aBots);";i:3;s:4:"9999";i:4;a:0:{}i:5;a:0:{}i:6;a:3:{s:8:"Executed";i:1;s:9:"TotalTime";d:8.20159912109375E-5;s:8:"LastTime";i:1237327114;}}}s:7:"meminfo";C:7:"Command":488:{a:7:{i:0;b:1;i:1;s:7:"meminfo";i:2;s:312:"$aGarbage = Memory :: getStatistics (); echo '4Current usage: ', sprintf ('%.2f MB', memory_get_usage () / 1024 / 1024), ' // 4Top usage: ', sprintf ('%.2f MB', memory_get_peak_usage () / 1024 / 1024), ' // 4Garbage: ', sprintf ('%.2f kB', $aGarbage ['Memory']), ' (', $aGarbage ['Elements'], ' elements)';";i:3;s:4:"9999";i:4;a:0:{}i:5;a:0:{}i:6;a:3:{s:8:"Executed";i:1;s:9:"TotalTime";d:3.910064697265625E-5;s:8:"LastTime";i:1237327353;}}}s:7:"restart";C:7:"Command":337:{a:7:{i:0;b:1;i:1;s:7:"restart";i:2;s:180:"BotManager :: getInstance () -> getBotList () -> send ('QUIT :Restart requested by ' . $sNickname); usleep (150000); die (exec ($_SERVER ['_'] . ' run.php restart > /dev/null &'));";i:3;s:4:"9999";i:4;a:0:{}i:5;a:0:{}i:6;a:3:{s:8:"Executed";i:1;s:9:"TotalTime";d:0;s:8:"LastTime";i:1237327560;}}}s:8:"cmdlevel";C:7:"Command":484:{a:7:{i:0;b:1;i:1;s:8:"cmdlevel";i:2;s:304:"if (count ($aParams) != 2) echo '4Usage: !cmdlevel command level'; else { if (!ModuleManager :: getInstance () -> offsetGet ('Commands') -> setCommandLevel ($aParams [0], $aParams [1])) echo '4Error: The command has not been found'; else echo '3The required level has been updated successfully.'; }";i:3;s:4:"9999";i:4;a:0:{}i:5;a:0:{}i:6;a:3:{s:8:"Executed";i:16;s:9:"TotalTime";d:0.00705051422119140625;s:8:"LastTime";i:1237327656;}}}s:8:"Internal";b:1;}